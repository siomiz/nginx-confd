{{ range gets "/services/web/*" }}
{{ $data := json .Value }}
{{ if $data._ }} 
upstream {{ base .Key }} {
	server {{ $data._ }};
}
{{ end }}{{ end }}

server {

	listen 443 ssl;

	server_name {{ getenv "SERVER_FQDN" }};
	ssl_certificate /etc/letsencrypt/live/{{ getenv "SERVER_FQDN" }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ getenv "SERVER_FQDN" }}/privkey.pem;

	ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 5m;

	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1.2;

	# https://mozilla.github.io/server-side-tls/ssl-config-generator/
	ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK:!AES128';

	ssl_dhparam dh4096.pem;
	
	client_max_body_size 0;

	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

	{{ range gets "/services/web/*" }}
	location /{{ base .Key }}/ {
		{{ $data := json .Value }}
		{{ if $data._ }}
		proxy_pass http://{{ base .Key }}/;
		{{ end }}
		{{ if $data.instr }}
		{{ $data.instr }}
		{{ end }}
	}
	{{ end }}

}
